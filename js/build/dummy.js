!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.CKEditor5=n():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.dummy=n())}(self,(()=>(()=>{var __webpack_modules__={"./js/ckeditor5_plugins/dummy/src/command.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ DummyCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/**\n * @file\n * Defines the Command plugin.\n */\n\n\n\n/**\n * The dummy command.\n *\n * @extends module:core/command~Command\n */\nclass DummyCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\n\n  elemName = \'dummy\';\n\n  /**\n   * @inheritDoc\n   */\n  refresh() {}\n\n  /**\n   * @inheritDoc\n   */\n  execute(options = {}) { }\n}\n\n\n//# sourceURL=webpack://CKEditor5.dummy/./js/ckeditor5_plugins/dummy/src/command.js?')},"./js/ckeditor5_plugins/dummy/src/editing.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DummyEditing)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var _command__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./command */ \"./js/ckeditor5_plugins/dummy/src/command.js\");\n/**\n * @file\n * Defines the Editing plugin.\n */\n\n/**\n * @module dummy/DummyEditing\n */\n\n\n\n\n/**\n * The editing feature.\n *\n * It introduces the 'dummy' element in the model.\n *\n * @extends module:core/plugin~Plugin\n */\nclass DummyEditing extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n\n  /**\n   * @inheritDoc\n   */\n  init() {\n    this._defineSchema();\n    this._defineConverters();\n\n    const editor = this.editor;\n\n    // Attaching the command to the editor.\n    editor.commands.add(\n      'dummyCommand',\n      new _command__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.editor),\n    );\n\n  }\n\n  /**\n   * Registers schema.\n   *\n   * @private\n   */\n  _defineSchema() {\n    const schema = this.editor.model.schema;\n\n    // parent element.\n    schema.register('dummy', {\n      allowIn: [ 'paragraph' ],\n      inheritAllFrom: '$inline',\n\n      isInline: true,\n      isObject: false,\n      isSelectable: true,\n\n      allowAttributes: [\n        'modelClass',\n      ],\n      allowChildren: [\n        '$inline',\n        '$text',\n      ],\n    });\n\n  }\n\n  /**\n   * Defines converters.\n   */\n  _defineConverters() {\n    const {conversion} = this.editor;\n    const textFormatSettings = this.editor.config.get('dummy');\n    const classesList = textFormatSettings.classes.split(/[\\s,]+/);\n\n    for (const className of classesList) {\n\n      // Dummy. View -> Model.\n      conversion.for('upcast').elementToElement({\n        view: {\n          name: 'span',\n          classes: [ className ],\n        },\n        converterPriority: 'highest',\n        model: (viewElement, conversionApi ) => {\n\n          let classes = viewElement.getAttribute('class');\n          if (!classes) {\n            return null;\n          }\n\n          var attrs = {\n            modelClass: classes,\n          };\n\n          return conversionApi.writer.createElement( 'dummy', attrs );\n        },\n      });\n\n      // Dummy. Model -> View.\n      conversion.for('downcast').elementToElement({\n        model: 'dummy',\n        view: (modelElement, { writer }) => {\n          const classes = [];\n          if (modelElement.getAttribute('modelClass')) {\n            classes.push(modelElement.getAttribute('modelClass'));\n          }\n          let htmlAttrs = {\n            'class': classes.join(' ')\n          };\n          return writer.createContainerElement('span', htmlAttrs );\n        }\n      });\n\n    }\n\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.dummy/./js/ckeditor5_plugins/dummy/src/editing.js?")},"./js/ckeditor5_plugins/dummy/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _editing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./editing */ "./js/ckeditor5_plugins/dummy/src/editing.js");\n/**\n * @file\n * Defines the Dummy plugin.\n */\n\n/**\n * @module dummy/Dummy\n */\n\n\n\n\n/**\n * The Dummy plugin.\n *\n * This is a "glue" plugin that loads\n *\n * @extends module:core/plugin~Plugin\n */\nclass Dummy extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n\n  /**\n   * @inheritdoc\n   */\n  static get requires() {\n    return [_editing__WEBPACK_IMPORTED_MODULE_1__["default"]];\n  }\n\n  /**\n   * @inheritdoc\n   */\n  static get pluginName() {\n    return \'plugDummy\';\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Dummy,\n});\n\n\n//# sourceURL=webpack://CKEditor5.dummy/./js/ckeditor5_plugins/dummy/src/index.js?')},"ckeditor5/src/core.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/core.js");\n\n//# sourceURL=webpack://CKEditor5.dummy/delegated_./core.js_from_dll-reference_CKEditor5.dll?')},"dll-reference CKEditor5.dll":e=>{"use strict";e.exports=CKEditor5.dll}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var _=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](_,_.exports,__webpack_require__),_.exports}__webpack_require__.d=(e,n)=>{for(var _ in n)__webpack_require__.o(n,_)&&!__webpack_require__.o(e,_)&&Object.defineProperty(e,_,{enumerable:!0,get:n[_]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./js/ckeditor5_plugins/dummy/src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()));